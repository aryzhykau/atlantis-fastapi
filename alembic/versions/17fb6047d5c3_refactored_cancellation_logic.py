"""refactored cancellation logic

Revision ID: 17fb6047d5c3
Revises: f82725d541b1
Create Date: 2025-09-15 01:08:09.842245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17fb6047d5c3'
down_revision: Union[str, None] = 'f82725d541b1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - adjusted for Enum creation and defaults ###
    op.drop_index(op.f('ix_training_templates_is_deleted'), table_name='training_templates')

    # Create Postgres enum type for cancellation mode first
    op.execute("CREATE TYPE cancellationmode AS ENUM ('FIXED', 'FLEXIBLE')")

    # Add columns with safe server defaults so existing rows get sensible values
    op.add_column(
        'training_types',
        sa.Column(
            'cancellation_mode',
            sa.Enum('FIXED', 'FLEXIBLE', name='cancellationmode'),
            nullable=False,
            server_default=sa.text("'FLEXIBLE'")
        )
    )
    op.add_column('training_types', sa.Column('safe_cancel_time_morning', sa.Time(), nullable=True))
    op.add_column('training_types', sa.Column('safe_cancel_time_evening', sa.Time(), nullable=True))
    op.add_column('training_types', sa.Column('safe_cancel_time_morning_prev_day', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('training_types', sa.Column('safe_cancel_time_evening_prev_day', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('training_types', sa.Column('safe_cancel_hours', sa.Integer(), nullable=True, server_default=sa.text('24')))

    # Ensure existing rows have the requested defaults: FLEXIBLE and 24 hours
    op.execute("UPDATE training_types SET cancellation_mode = 'FLEXIBLE' WHERE cancellation_mode IS NULL")
    op.execute("UPDATE training_types SET safe_cancel_hours = 24 WHERE safe_cancel_hours IS NULL")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - adjusted to drop Enum type ###

    # Drop the columns we added
    op.drop_column('training_types', 'safe_cancel_hours')
    op.drop_column('training_types', 'safe_cancel_time_evening_prev_day')
    op.drop_column('training_types', 'safe_cancel_time_morning_prev_day')
    op.drop_column('training_types', 'safe_cancel_time_evening')
    op.drop_column('training_types', 'safe_cancel_time_morning')
    op.drop_column('training_types', 'cancellation_mode')

    # Restore index
    op.create_index(op.f('ix_training_templates_is_deleted'), 'training_templates', ['is_deleted'], unique=False)

    # Drop Postgres enum type
    op.execute('DROP TYPE IF EXISTS cancellationmode')

    # ### end Alembic commands ###
