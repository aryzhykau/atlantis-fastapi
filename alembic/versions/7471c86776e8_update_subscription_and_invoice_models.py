"""update subscription and invoice models

Revision ID: 7471c86776e8
Revises: a6a442f6cd6b
Create Date: 2025-05-18 13:58:14.259073

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7471c86776e8'
down_revision: Union[str, None] = 'a6a442f6cd6b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Создаем Enum типы
    invoicestatus = postgresql.ENUM('UNPAID', 'PAID', 'CANCELLED', name='invoicestatus')
    invoicestatus.create(op.get_bind())
    
    invoicetype = postgresql.ENUM('SUBSCRIPTION', 'TRAINING', name='invoicetype')
    invoicetype.create(op.get_bind())
    
    # Добавляем колонки
    op.add_column('invoices', sa.Column('description', sa.String(), nullable=False))
    op.add_column('invoices', sa.Column('status', sa.Enum('UNPAID', 'PAID', 'CANCELLED', name='invoicestatus'), nullable=False))
    op.add_column('invoices', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('invoices', sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('invoices', sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('invoices', sa.Column('created_by_id', sa.Integer(), nullable=False))
    op.add_column('invoices', sa.Column('cancelled_by_id', sa.Integer(), nullable=True))
    op.add_column('invoices', sa.Column('payment_id', sa.Integer(), nullable=True))
    op.add_column('invoices', sa.Column('is_auto_renewal', sa.Boolean(), nullable=True))
    
    # Изменяем тип колонки type
    op.execute('ALTER TABLE invoices ALTER COLUMN type TYPE invoicetype USING type::invoicetype')
    
    # Создаем внешние ключи
    op.create_foreign_key(None, 'invoices', 'users', ['created_by_id'], ['id'])
    op.create_foreign_key(None, 'invoices', 'payments', ['payment_id'], ['id'])
    op.create_foreign_key(None, 'invoices', 'users', ['cancelled_by_id'], ['id'])
    
    # Удаляем старые колонки
    op.drop_column('invoices', 'payment_date')
    op.drop_column('invoices', 'is_paid')
    
    # Добавляем колонки в student_subscriptions
    op.add_column('student_subscriptions', sa.Column('sessions_left', sa.Integer(), nullable=False))
    op.add_column('student_subscriptions', sa.Column('transferred_sessions', sa.Integer(), nullable=True))
    op.add_column('student_subscriptions', sa.Column('auto_renewal_invoice_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'student_subscriptions', 'invoices', ['auto_renewal_invoice_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'student_subscriptions', type_='foreignkey')
    op.drop_column('student_subscriptions', 'auto_renewal_invoice_id')
    op.drop_column('student_subscriptions', 'transferred_sessions')
    op.drop_column('student_subscriptions', 'sessions_left')
    
    # Восстанавливаем старые колонки
    op.add_column('invoices', sa.Column('is_paid', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('invoices', sa.Column('payment_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    
    # Удаляем внешние ключи
    op.drop_constraint(None, 'invoices', type_='foreignkey')
    op.drop_constraint(None, 'invoices', type_='foreignkey')
    op.drop_constraint(None, 'invoices', type_='foreignkey')
    
    # Возвращаем тип колонки type
    op.execute('ALTER TABLE invoices ALTER COLUMN type TYPE VARCHAR USING type::VARCHAR')
    
    # Удаляем новые колонки
    op.drop_column('invoices', 'is_auto_renewal')
    op.drop_column('invoices', 'payment_id')
    op.drop_column('invoices', 'cancelled_by_id')
    op.drop_column('invoices', 'created_by_id')
    op.drop_column('invoices', 'cancelled_at')
    op.drop_column('invoices', 'paid_at')
    op.drop_column('invoices', 'created_at')
    op.drop_column('invoices', 'status')
    op.drop_column('invoices', 'description')
    
    # Удаляем Enum типы
    op.execute('DROP TYPE invoicestatus')
    op.execute('DROP TYPE invoicetype')
    # ### end Alembic commands ###
