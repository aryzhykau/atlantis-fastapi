"""add_student_monthly_stats

Revision ID: a5131eb9562c
Revises: e396c0944460
Create Date: 2025-05-18 13:40:42.246404

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a5131eb9562c'
down_revision: Union[str, None] = 'e396c0944460'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_monthly_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('year_month', sa.Date(), nullable=False),
    sa.Column('rescheduled_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'year_month', name='unique_student_month')
    )
    op.create_index(op.f('ix_student_monthly_stats_id'), 'student_monthly_stats', ['id'], unique=False)
    op.drop_index('ix_generation_settings_id', table_name='generation_settings')
    op.drop_table('generation_settings')
    op.add_column('real_training_students', sa.Column('subscription_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'real_training_students', 'student_subscriptions', ['subscription_id'], ['id'])
    op.drop_column('real_training_students', 'requires_payment')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('real_training_students', sa.Column('requires_payment', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'real_training_students', type_='foreignkey')
    op.drop_column('real_training_students', 'subscription_id')
    op.create_table('generation_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('generation_day', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('generation_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_generation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_generation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('safe_cancellation_hours', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='generation_settings_pkey')
    )
    op.create_index('ix_generation_settings_id', 'generation_settings', ['id'], unique=False)
    op.drop_index(op.f('ix_student_monthly_stats_id'), table_name='student_monthly_stats')
    op.drop_table('student_monthly_stats')
    # ### end Alembic commands ###
